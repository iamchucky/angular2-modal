/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./overlay.component');
var import4 = require('@angular/core/src/linker/view_utils');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('../models/dialog-ref');
var import9 = require('@angular/core/src/linker/element_ref');
var import10 = require('@angular/core/src/metadata/view');
var import11 = require('@angular/core/src/linker/component_factory');
var import12 = require('@angular/core/src/linker/query_list');
var import13 = require('@angular/core/src/linker/template_ref');
var import14 = require('../components/swap-component.directive');
var import15 = require('@angular/core/src/linker/component_factory_resolver');
var renderType_ModalOverlay_Host = null;
var _View_ModalOverlay_Host0 = (function (_super) {
    __extends(_View_ModalOverlay_Host0, _super);
    function _View_ModalOverlay_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ModalOverlay_Host0, renderType_ModalOverlay_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ModalOverlay_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('modal-overlay', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ModalOverlay0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ModalOverlay_0_5 = new import3.ModalOverlay(this.parentInjector.get(import8.DialogRef), this._appEl_0.vcRef, new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._ModalOverlay_0_5, [], compView_0);
        compView_0.create(this._ModalOverlay_0_5, this.projectableNodes, null);
        var disposable_0 = this.renderer.listenGlobal('body', 'keydown', this.eventHandler(this._handle_keydown_0_0.bind(this)));
        this.init([].concat([this._appEl_0]), [this._el_0], [disposable_0], []);
        return this._appEl_0;
    };
    _View_ModalOverlay_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.ModalOverlay) && (0 === requestNodeIndex))) {
            return this._ModalOverlay_0_5;
        }
        return notFoundResult;
    };
    _View_ModalOverlay_Host0.prototype.destroyInternal = function () {
        this._ModalOverlay_0_5.ngOnDestroy();
    };
    _View_ModalOverlay_Host0.prototype._handle_keydown_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._ModalOverlay_0_5.documentKeypress($event) !== false);
        return (true && pd_0);
    };
    return _View_ModalOverlay_Host0;
}(import1.AppView));
function viewFactory_ModalOverlay_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ModalOverlay_Host === null)) {
        (renderType_ModalOverlay_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_ModalOverlay_Host0(viewUtils, parentInjector, declarationEl);
}
exports.ModalOverlayNgFactory = new import11.ComponentFactory('modal-overlay', viewFactory_ModalOverlay_Host0, import3.ModalOverlay);
var styles_ModalOverlay = [];
var renderType_ModalOverlay = null;
var _View_ModalOverlay0 = (function (_super) {
    __extends(_View_ModalOverlay0, _super);
    function _View_ModalOverlay0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ModalOverlay0, renderType_ModalOverlay, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ModalOverlay0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_innerView_0 = new import12.QueryList();
        this._viewQuery_template_1 = new import12.QueryList();
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import13.TemplateRef_(this._appEl_0, viewFactory_ModalOverlay1);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_2 = new import2.AppElement(2, null, this, this._anchor_2);
        this._TemplateRef_2_4 = new import13.TemplateRef_(this._appEl_2, viewFactory_ModalOverlay2);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n', null);
        this._viewQuery_innerView_0.reset([this._appEl_0.vcRef]);
        this.context.innerVcr = this._viewQuery_innerView_0.first;
        this._viewQuery_template_1.reset([this._TemplateRef_2_4]);
        this.context.template = this._viewQuery_template_1.first;
        this.init([], [
            this._anchor_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ], [], []);
        return null;
    };
    _View_ModalOverlay0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_4;
        }
        return notFoundResult;
    };
    return _View_ModalOverlay0;
}(import1.AppView));
function viewFactory_ModalOverlay0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ModalOverlay === null)) {
        (renderType_ModalOverlay = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, styles_ModalOverlay, {}));
    }
    return new _View_ModalOverlay0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_ModalOverlay0 = viewFactory_ModalOverlay0;
var _View_ModalOverlay1 = (function (_super) {
    __extends(_View_ModalOverlay1, _super);
    function _View_ModalOverlay1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ModalOverlay1, renderType_ModalOverlay, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ModalOverlay1.prototype.createInternal = function (rootSelector) {
        this.init([], [], [], []);
        return null;
    };
    return _View_ModalOverlay1;
}(import1.AppView));
function viewFactory_ModalOverlay1(viewUtils, parentInjector, declarationEl) {
    return new _View_ModalOverlay1(viewUtils, parentInjector, declarationEl);
}
var _View_ModalOverlay2 = (function (_super) {
    __extends(_View_ModalOverlay2, _super);
    function _View_ModalOverlay2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ModalOverlay2, renderType_ModalOverlay, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ModalOverlay2.prototype.createInternal = function (rootSelector) {
        this._text_0 = this.renderer.createText(null, '\n    ', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(null, null);
        this._appEl_1 = new import2.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import13.TemplateRef_(this._appEl_1, viewFactory_ModalOverlay3);
        this._SwapComponentDirective_1_6 = new import14.SwapComponentDirective(this.parentInjector.get(import15.ComponentFactoryResolver), this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._text_2 = this.renderer.createText(null, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([
            this._text_0,
            this._appEl_1,
            this._text_2
        ]), [
            this._text_0,
            this._anchor_1,
            this._text_2
        ], [], []);
        return null;
    };
    _View_ModalOverlay2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import14.SwapComponentDirective) && (1 === requestNodeIndex))) {
            return this._SwapComponentDirective_1_6;
        }
        return notFoundResult;
    };
    _View_ModalOverlay2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.$implicit.bindings;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._SwapComponentDirective_1_6.swapCmpBindings = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.context.$implicit.projectableNodes;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._SwapComponentDirective_1_6.swapCmpProjectables = currVal_1;
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit.component;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._SwapComponentDirective_1_6.swapCmp = currVal_2;
            this._expr_2 = currVal_2;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ModalOverlay2;
}(import1.AppView));
function viewFactory_ModalOverlay2(viewUtils, parentInjector, declarationEl) {
    return new _View_ModalOverlay2(viewUtils, parentInjector, declarationEl);
}
var _View_ModalOverlay3 = (function (_super) {
    __extends(_View_ModalOverlay3, _super);
    function _View_ModalOverlay3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ModalOverlay3, renderType_ModalOverlay, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ModalOverlay3.prototype.createInternal = function (rootSelector) {
        this.init([], [], [], []);
        return null;
    };
    return _View_ModalOverlay3;
}(import1.AppView));
function viewFactory_ModalOverlay3(viewUtils, parentInjector, declarationEl) {
    return new _View_ModalOverlay3(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=overlay.component.ngfactory.js.map