/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./dialog-form-modal');
var import4 = require('@angular/core/src/linker/view_utils');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('@angular/core/src/metadata/view');
var import9 = require('@angular/core/src/linker/component_factory');
var import10 = require('@angular/common/src/directives/ng_for');
var import11 = require('@angular/core/src/linker/template_ref');
var import12 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import13 = require('../../models/dialog-ref');
var import14 = require('../../components/swap-component.directive');
var import15 = require('@angular/core/src/linker/component_factory_resolver');
var import16 = require('@angular/common/src/directives/ng_if');
var renderType_VEXDialogButtons_Host = null;
var _View_VEXDialogButtons_Host0 = (function (_super) {
    __extends(_View_VEXDialogButtons_Host0, _super);
    function _View_VEXDialogButtons_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_VEXDialogButtons_Host0, renderType_VEXDialogButtons_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_VEXDialogButtons_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('vex-dialog-buttons', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_VEXDialogButtons0(this.viewUtils, this.injector(0), this._appEl_0);
        this._VEXDialogButtons_0_4 = new import3.VEXDialogButtons();
        this._appEl_0.initComponent(this._VEXDialogButtons_0_4, [], compView_0);
        compView_0.create(this._VEXDialogButtons_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_VEXDialogButtons_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.VEXDialogButtons) && (0 === requestNodeIndex))) {
            return this._VEXDialogButtons_0_4;
        }
        return notFoundResult;
    };
    return _View_VEXDialogButtons_Host0;
}(import1.AppView));
function viewFactory_VEXDialogButtons_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_VEXDialogButtons_Host === null)) {
        (renderType_VEXDialogButtons_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_VEXDialogButtons_Host0(viewUtils, parentInjector, declarationEl);
}
exports.VEXDialogButtonsNgFactory = new import9.ComponentFactory('vex-dialog-buttons', viewFactory_VEXDialogButtons_Host0, import3.VEXDialogButtons);
var styles_VEXDialogButtons = [];
var renderType_VEXDialogButtons = null;
var _View_VEXDialogButtons0 = (function (_super) {
    __extends(_View_VEXDialogButtons0, _super);
    function _View_VEXDialogButtons0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_VEXDialogButtons0, renderType_VEXDialogButtons, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_VEXDialogButtons0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'vex-dialog-buttons');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import11.TemplateRef_(this._appEl_2, viewFactory_VEXDialogButtons1);
        this._NgFor_2_6 = new import10.NgFor(this._appEl_2.vcRef, this._TemplateRef_2_5, this.parentInjector.get(import12.IterableDiffers), this.ref);
        this._text_3 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ], [], []);
        return null;
    };
    _View_VEXDialogButtons0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import10.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6;
        }
        return notFoundResult;
    };
    _View_VEXDialogButtons0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.context.buttons;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_2_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_2_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_2_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_VEXDialogButtons0;
}(import1.AppView));
function viewFactory_VEXDialogButtons0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_VEXDialogButtons === null)) {
        (renderType_VEXDialogButtons = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_VEXDialogButtons, {}));
    }
    return new _View_VEXDialogButtons0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_VEXDialogButtons0 = viewFactory_VEXDialogButtons0;
var _View_VEXDialogButtons1 = (function (_super) {
    __extends(_View_VEXDialogButtons1, _super);
    function _View_VEXDialogButtons1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_VEXDialogButtons1, renderType_VEXDialogButtons, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_VEXDialogButtons1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'type', 'button');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [disposable_0], []);
        return null;
    };
    _View_VEXDialogButtons1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.context.$implicit.cssClass;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = import4.interpolate(1, '', this.context.$implicit.caption, '');
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_VEXDialogButtons1.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.onClick(this.context.$implicit, $event) !== false);
        return (true && pd_0);
    };
    return _View_VEXDialogButtons1;
}(import1.AppView));
function viewFactory_VEXDialogButtons1(viewUtils, parentInjector, declarationEl) {
    return new _View_VEXDialogButtons1(viewUtils, parentInjector, declarationEl);
}
var renderType_DialogFormModal_Host = null;
var _View_DialogFormModal_Host0 = (function (_super) {
    __extends(_View_DialogFormModal_Host0, _super);
    function _View_DialogFormModal_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DialogFormModal_Host0, renderType_DialogFormModal_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_DialogFormModal_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('modal-dialog', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_DialogFormModal0(this.viewUtils, this.injector(0), this._appEl_0);
        this._DialogFormModal_0_4 = new import3.DialogFormModal(this.parentInjector.get(import13.DialogRef));
        this._appEl_0.initComponent(this._DialogFormModal_0_4, [], compView_0);
        compView_0.create(this._DialogFormModal_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_DialogFormModal_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.DialogFormModal) && (0 === requestNodeIndex))) {
            return this._DialogFormModal_0_4;
        }
        return notFoundResult;
    };
    return _View_DialogFormModal_Host0;
}(import1.AppView));
function viewFactory_DialogFormModal_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DialogFormModal_Host === null)) {
        (renderType_DialogFormModal_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_DialogFormModal_Host0(viewUtils, parentInjector, declarationEl);
}
exports.DialogFormModalNgFactory = new import9.ComponentFactory('modal-dialog', viewFactory_DialogFormModal_Host0, import3.DialogFormModal);
var styles_DialogFormModal = [];
var renderType_DialogFormModal = null;
var _View_DialogFormModal0 = (function (_super) {
    __extends(_View_DialogFormModal0, _super);
    function _View_DialogFormModal0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DialogFormModal0, renderType_DialogFormModal, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_DialogFormModal0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'form', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'vex-dialog-form');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import11.TemplateRef_(this._appEl_2, viewFactory_DialogFormModal1);
        this._SwapComponentDirective_2_6 = new import14.SwapComponentDirective(this.parentInjector.get(import15.ComponentFactoryResolver), this._appEl_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_4 = this.renderer.createElement(this._el_0, 'vex-dialog-buttons', null);
        this._appEl_4 = new import2.AppElement(4, 0, this, this._el_4);
        var compView_4 = viewFactory_VEXDialogButtons0(this.viewUtils, this.injector(4), this._appEl_4);
        this._VEXDialogButtons_4_4 = new import3.VEXDialogButtons();
        this._appEl_4.initComponent(this._VEXDialogButtons_4_4, [], compView_4);
        compView_4.create(this._VEXDialogButtons_4_4, [], null);
        this._text_5 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_4, 'onButtonClick', this.eventHandler(this._handle_onButtonClick_4_0.bind(this)));
        this._expr_2 = import7.UNINITIALIZED;
        var subscription_0 = this._VEXDialogButtons_4_4.onButtonClick.subscribe(this.eventHandler(this._handle_onButtonClick_4_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._el_4,
            this._text_5
        ], [disposable_0], [subscription_0]);
        return null;
    };
    _View_DialogFormModal0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import14.SwapComponentDirective) && (2 === requestNodeIndex))) {
            return this._SwapComponentDirective_2_6;
        }
        if (((token === import3.VEXDialogButtons) && (4 === requestNodeIndex))) {
            return this._VEXDialogButtons_4_4;
        }
        return notFoundResult;
    };
    _View_DialogFormModal0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.context.content;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._SwapComponentDirective_2_6.swapCmp = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_2 = this.context.context.buttons;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._VEXDialogButtons_4_4.buttons = currVal_2;
            this._expr_2 = currVal_2;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_DialogFormModal0.prototype._handle_onButtonClick_4_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onButtonClick($event) !== false);
        return (true && pd_0);
    };
    return _View_DialogFormModal0;
}(import1.AppView));
function viewFactory_DialogFormModal0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DialogFormModal === null)) {
        (renderType_DialogFormModal = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_DialogFormModal, {}));
    }
    return new _View_DialogFormModal0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_DialogFormModal0 = viewFactory_DialogFormModal0;
var _View_DialogFormModal1 = (function (_super) {
    __extends(_View_DialogFormModal1, _super);
    function _View_DialogFormModal1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DialogFormModal1, renderType_DialogFormModal, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_DialogFormModal1.prototype.createInternal = function (rootSelector) {
        this.init([], [], [], []);
        return null;
    };
    return _View_DialogFormModal1;
}(import1.AppView));
function viewFactory_DialogFormModal1(viewUtils, parentInjector, declarationEl) {
    return new _View_DialogFormModal1(viewUtils, parentInjector, declarationEl);
}
var renderType_FormDropIn_Host = null;
var _View_FormDropIn_Host0 = (function (_super) {
    __extends(_View_FormDropIn_Host0, _super);
    function _View_FormDropIn_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_FormDropIn_Host0, renderType_FormDropIn_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_FormDropIn_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('drop-in-dialog', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_FormDropIn0(this.viewUtils, this.injector(0), this._appEl_0);
        this._FormDropIn_0_4 = new import3.FormDropIn(this.parentInjector.get(import13.DialogRef));
        this._appEl_0.initComponent(this._FormDropIn_0_4, [], compView_0);
        compView_0.create(this._FormDropIn_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_FormDropIn_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.FormDropIn) && (0 === requestNodeIndex))) {
            return this._FormDropIn_0_4;
        }
        return notFoundResult;
    };
    return _View_FormDropIn_Host0;
}(import1.AppView));
function viewFactory_FormDropIn_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_FormDropIn_Host === null)) {
        (renderType_FormDropIn_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_FormDropIn_Host0(viewUtils, parentInjector, declarationEl);
}
exports.FormDropInNgFactory = new import9.ComponentFactory('drop-in-dialog', viewFactory_FormDropIn_Host0, import3.FormDropIn);
var styles_FormDropIn = [];
var renderType_FormDropIn = null;
var _View_FormDropIn0 = (function (_super) {
    __extends(_View_FormDropIn0, _super);
    function _View_FormDropIn0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_FormDropIn0, renderType_FormDropIn, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_FormDropIn0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'vex-dialog-message');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_3 = new import2.AppElement(3, null, this, this._anchor_3);
        this._TemplateRef_3_5 = new import11.TemplateRef_(this._appEl_3, viewFactory_FormDropIn1);
        this._NgIf_3_6 = new import16.NgIf(this._appEl_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n ', null);
        this._anchor_5 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_5 = new import2.AppElement(5, null, this, this._anchor_5);
        this._TemplateRef_5_5 = new import11.TemplateRef_(this._appEl_5, viewFactory_FormDropIn2);
        this._NgIf_5_6 = new import16.NgIf(this._appEl_5.vcRef, this._TemplateRef_5_5);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._anchor_5
        ], [], []);
        return null;
    };
    _View_FormDropIn0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import16.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6;
        }
        if (((token === import11.TemplateRef) && (5 === requestNodeIndex))) {
            return this._TemplateRef_5_5;
        }
        if (((token === import16.NgIf) && (5 === requestNodeIndex))) {
            return this._NgIf_5_6;
        }
        return notFoundResult;
    };
    _View_FormDropIn0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.context.showInput;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgIf_3_6.ngIf = currVal_1;
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.context.showCloseButton;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgIf_5_6.ngIf = currVal_2;
            this._expr_2 = currVal_2;
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.context.context.message, '');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_FormDropIn0;
}(import1.AppView));
function viewFactory_FormDropIn0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_FormDropIn === null)) {
        (renderType_FormDropIn = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_FormDropIn, {}));
    }
    return new _View_FormDropIn0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_FormDropIn0 = viewFactory_FormDropIn0;
var _View_FormDropIn1 = (function (_super) {
    __extends(_View_FormDropIn1, _super);
    function _View_FormDropIn1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_FormDropIn1, renderType_FormDropIn, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_FormDropIn1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'vex-dialog-input');
        this._text_1 = this.renderer.createText(this._el_0, '\n   ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'input', null);
        this.renderer.setElementAttribute(this._el_2, 'autofocus', '');
        this.renderer.setElementAttribute(this._el_2, 'class', 'vex-dialog-prompt-input');
        this.renderer.setElementAttribute(this._el_2, 'name', 'vex');
        this.renderer.setElementAttribute(this._el_2, 'type', 'text');
        this._text_3 = this.renderer.createText(this._el_0, '\n ', null);
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_2, 'change', this.eventHandler(this._handle_change_2_0.bind(this)));
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3
        ], [disposable_0], []);
        return null;
    };
    _View_FormDropIn1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = import4.interpolate(1, '', this.parent.context.context.placeholder, '');
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_2, 'placeholder', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_FormDropIn1.prototype._handle_change_2_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.context.context.defaultResult = this._el_2.value) !== false);
        return (true && pd_0);
    };
    return _View_FormDropIn1;
}(import1.AppView));
function viewFactory_FormDropIn1(viewUtils, parentInjector, declarationEl) {
    return new _View_FormDropIn1(viewUtils, parentInjector, declarationEl);
}
var _View_FormDropIn2 = (function (_super) {
    __extends(_View_FormDropIn2, _super);
    function _View_FormDropIn2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_FormDropIn2, renderType_FormDropIn, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_FormDropIn2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return null;
    };
    _View_FormDropIn2.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.parent.context.context.closeClassName;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_FormDropIn2.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.dialog.dismiss() !== false);
        return (true && pd_0);
    };
    return _View_FormDropIn2;
}(import1.AppView));
function viewFactory_FormDropIn2(viewUtils, parentInjector, declarationEl) {
    return new _View_FormDropIn2(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=dialog-form-modal.ngfactory.js.map